module lab7_1
#(parameter DATA_WIDTH = 4)
(
(*altera_attribute = "-name IO_STANDARD\"3.3-V LVCMOS\"", chip_pin = "49, 46, 25, 24"*)
input [DATA_WIDTH-1:0] da,

(*altera_attribute = "-name IO_STANDARD\"3.3-V LVCMOS\"", chip_pin = "88, 89, 91, 90"*)
input [DATA_WIDTH-1:0] db,
(*altera_attribute = "-name IO_STANDARD\"3.3-V LVCMOS\"", chip_pin = "23"*)
input clk,
(*altera_attribute = "-name IO_STANDARD\"3.3-V LVCMOS\"", chip_pin = "65, 66, 67, 68, 69, 70, 71, 72"*)
output reg [2*DATA_WIDTH-1:0] q
);

// ROM memory array
reg [2*DATA_WIDTH-1:0] rom[2**(2*DATA_WIDTH)-1:0];
//nternal varaibles
reg [DATA_WIDTH -1:0] ta, tb, ia, jb;
// Specify the initial contents of the ROM

initial begin : INIT 
	integer i,j;
	for(i = 0; i < 2*DATA_WIDTH-1; i =i +1)
		for(j = 0; j < 2*DATA_WIDTH-1; j =j+1)
			begin
				ia = i;
				jb = j;
				rom[{ia,jb}] = ia * jb;
			end
end 
//store data from inputs.
always @ (posedge clk)
	begin 
		ta <= da;
		tb <= db;
	end
// read ROM and return the result

always @ (posedge clk)
	q <= rom[{ta, tb}];
endmodule 
